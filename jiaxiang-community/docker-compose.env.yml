version: '3'
services:
  mysql:
    image: mysql:8.4.6 # 使用的镜像,必须指定版本不能使用mysql:8，否则更新时候会自动停止重建
    container_name: jiaxiang-mysql # 启动的实例名称
    environment:
      MYSQL_ROOT_PASSWORD: test # root 用户密码
      # 新增：设置默认认证插件为 mysql_native_password
      MYSQL_DEFAULT_AUTHENTICATION_PLUGIN: mysql_native_password
    ports:
      - "3306:3306" # 端口映射
    volumes:
      - ./.mysql-data:/var/lib/mysql # 将数据目录挂载到本地目录以进行持久化
      # - ./mysql-init:/docker-entrypoint-initdb.d # 自动执行启动脚本
    restart: always # 崩溃后自动重启
    networks:
      - mynetwork # 指定网络

  mongodb:
    image: mongo:7.0.14
    container_name: jiaxiang-mongodb
    ports:
      - "27017:27017" # MongoDB 默认端口
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root # 设置 root 用户名
#      - MONGO_INITDB_ROOT_PASSWORD=test # 设置 root 密码
    volumes:
      - ./.mongodb-data:/data/db # 将数据目录挂载到本地，实现持久化
    restart: always
    networks:
      - mynetwork

  redis:
    image: redis:6.2.14
    container_name: jiaxiang-redis
    ports:
      - "6379:6379"
    networks:
      - mynetwork
    volumes:
      - ./.redis-data:/data # 持久化
    restart: always
    command: redis-server --requirepass test # 核心修改：启动时设置密码为 test

  rabbitmq:
    image: rabbitmq:3.12.6-management # 支持管理面板的消息队列
    container_name: jiaxiang-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: test
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ Dashboard 端口
    volumes:
      - ./.rabbitmq-data:/var/lib/rabbitmq # 持久化
    networks:
      - mynetwork

  nacos:
    image: nacos/nacos-server:v2.4.3
    container_name: jiaxiang-nacos
    ports:
      - "8848:8848"
    volumes:
      - ./.nacos-data:/home/nacos/data
    networks:
      - mynetwork
    environment:
      - MODE=standalone # 单节点模式启动
      - PREFER_HOST_MODE=hostname # 支持 hostname
      - TZ=Asia/Shanghai # 控制时区
      - NACOS_AUTH_ENABLE=true
      - NACOS_AUTH_TOKEN=VGhpcyBpcyBteSBzZWNyZXQga2V5IGZvciBuYWNvcyEhISEhISEhISEhISEhISEhISE=
      - NACOS_CORE_AUTH_SERVER_IDENTITY_KEY=nacos
      - NACOS_CORE_AUTH_SERVER_IDENTITY_VALUE=nacos

  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: jiaxiang-minio
    ports:
      - "9000:9000"   # MinIO 的 API 端口
      - "9090:9090"   # MinIO 控制台（Web UI）的端口
    environment:
      - MINIO_ROOT_USER=minio      # 核心修改：设置用户名
      - MINIO_ROOT_PASSWORD=minio123 # 核心修改：设置密码
    volumes:
      - ./.minio-data:/data # 核心修改：挂载 MinIO 的数据目录，用于持久化
    command: server /data --console-address ":9090" # 启动命令，指定数据目录和控制台端口
    networks:
      - mynetwork

networks:
  mynetwork: